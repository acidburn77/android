From 5c3bf776220279737e05a051504d40bca59dea83 Mon Sep 17 00:00:00 2001
From: Mihai Serban <mihai.serban@intel.com>
Date: Mon, 9 Mar 2015 12:16:00 +0100
Subject: [PATCH] make_ext4fs: workaround for a glibc scandir bug

Due to a bug in glibc scandir the make_ext4fs tool fails sometimes
with error message:
"error: build_directory_structure: scandir: Cannot allocate memory"
A simple retry of the failed scandir in case errno is ENOMEM
greatly increases the chances to finish the operation successfully.

The scandir bug is reported here:
https://sourceware.org/bugzilla/show_bug.cgi?id=17804
---
 ext4_utils/make_ext4fs.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/ext4_utils/make_ext4fs.c b/ext4_utils/make_ext4fs.c
index 2f89ae8..62a3f1a 100644
--- a/ext4_utils/make_ext4fs.c
+++ b/ext4_utils/make_ext4fs.c
@@ -143,8 +143,18 @@ static u32 build_directory_structure(const char *full_path, const char *dir_path
 	if (full_path) {
 		entries = scandir(full_path, &namelist, filter_dot, (void*)alphasort);
 		if (entries < 0) {
-			error_errno("scandir");
-			return EXT4_ALLOCATE_FAILED;
+#ifdef __GLIBC__
+			/* The scandir function implemented in glibc has a bug that makes it
+			   erroneously fail with ENOMEM under certain circumstances.
+			   As a workaround we can retry the scandir call with the same arguments.
+			   GLIBC BZ: https://sourceware.org/bugzilla/show_bug.cgi?id=17804 */
+			if (errno == ENOMEM)
+				entries = scandir(full_path, &namelist, filter_dot, (void*)alphasort);
+#endif
+			if (entries < 0) {
+				error_errno("scandir");
+				return EXT4_ALLOCATE_FAILED;
+			}
 		}
 	}
 
-- 
2.3.1

